name: Build & Release Compose App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release'
        required: true
        default: 'main'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            gradle_task: ":composeApp:packageReleaseDeb"
            artifact_ext: deb
          - os: windows-latest
            gradle_task: ":composeApp:packageReleaseMsi"
            artifact_ext: msi
          - os: macos-latest
            gradle_task: ":composeApp:packageReleaseDmg"
            artifact_ext: dmg

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref_name }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build
        run: ./gradlew ${{ matrix.gradle_task }}

      - name: Find version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Rename artifact with version
        run: |
          mkdir artifacts
          FILE=$(find composeApp/build/compose/binaries -type f -name "*.${{ matrix.artifact_ext }}" | head -n 1)
          cp "$FILE" "artifacts/myapp-${{ env.VERSION }}-${{ runner.os }}.${{ matrix.artifact_ext }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ env.VERSION }}-${{ runner.os }}
          path: artifacts/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./dist

      - name: Create Pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          prerelease: ${{ github.event.inputs.branch != 'main' }}
          generate_release_notes: true
          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
